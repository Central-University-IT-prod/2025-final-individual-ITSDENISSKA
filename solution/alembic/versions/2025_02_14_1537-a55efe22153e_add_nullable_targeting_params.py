"""add nullable targeting params

Revision ID: a55efe22153e
Revises: a3cf46ab1c70
Create Date: 2025-02-14 15:37:51.088568

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a55efe22153e"
down_revision: Union[str, None] = "a3cf46ab1c70"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "targetings",
        "gender",
        existing_type=postgresql.ENUM(
            "MALE", "FEMALE", "ALL", name="extendedgenderenum"
        ),
        nullable=True,
    )
    op.alter_column("targetings", "age_from", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("targetings", "age_to", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("targetings", "location", existing_type=sa.VARCHAR(), nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "targetings", "location", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column("targetings", "age_to", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column(
        "targetings", "age_from", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "targetings",
        "gender",
        existing_type=postgresql.ENUM(
            "MALE", "FEMALE", "ALL", name="extendedgenderenum"
        ),
        nullable=False,
    )
    # ### end Alembic commands ###
