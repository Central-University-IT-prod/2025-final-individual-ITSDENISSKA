version: '3.8'

services:
  app:
    build: .
    restart: always
    container_name: app
    environment:
      - DB_URL=postgresql+psycopg://postgres:password@db:5432/backend-advertising-platform-postgres
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=advertising-platform-postgres
      - S3_ENDPOINT_URL=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET_NAME=ads-images
      - YANDEX_API_KEY=REDACTED
      - YANDEX_FOLDER_ID=b1ge4t93onif4tmotchh
      - MODERATE_AD_TEXT=false
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://REDACTED:8080/api/v1/ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    image: postgres:16
    restart: always
    container_name: db-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=backend-advertising-platform-postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 10s
      retries: 3
    volumes:
      - dbdata6:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server --console-address ":9001" /data/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/ready" ]
      interval: 5s
      timeout: 5s
    volumes:
      - miniodata:/data

  create-bucket:
    image: minio/mc:latest
    container_name: create-bucket
    entrypoint: >
      sh -c "mc alias set myminio http://minio:9000 minioadmin minioadmin && 
             mc mb myminio/ads-images && 
             mc anonymous set download myminio/ads-images"
    depends_on:
      minio:
        condition: service_healthy
    restart: "no"

  grafana:
    image: grafana/grafana:9.5.6
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards


volumes:
  dbdata6:
  miniodata: